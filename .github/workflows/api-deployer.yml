name: Terraform Deployment
on:
  workflow_call:
    secrets:
      GCP_MOBILITY_FEEDS_SA_KEY:
        description: Service account key
        required: true
    inputs:
      ENVIRONMENT:
        description: API environment. Possible values prod, staging and dev
        required: true
        type: string
      BUCKET_NAME:
        description: Bucket name where terraform state is persisted
        required: true
        type: string
      OBJECT_PREFIX:
        description: Storage object prefix where terraform state is persisted
        required: true
        type: string
      PROJECT_ID:
        description: GCP project ID
        required: true
        type: string
      REGION:
        description: GCP region
        required: true
        type: string
      DEPLOYER_SERVICE_ACCOUNT:
        description: Service account used to deploy resources
        required: true
        type: string
      FEED_API_IMAGE_VERSION:
        description: Docker image version to deploy
        required: true
        type: string
      TF_APPLY:
        description: Terraform apply changes
        required: true
        type: string
      GH_EVENT:
        description: Github event from the caller
        required: true
        type: string

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        id: gcloud_auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_MOBILITY_FEEDS_SA_KEY }}

      - name: GCloud Setup
        uses: google-github-actions/setup-gcloud@v1

      - name: Set Variables
        run: |
          echo "Setting variables"
          echo "BUCKET_NAME=${{ inputs.BUCKET_NAME }}" >> $GITHUB_ENV
          echo "OBJECT_PREFIX=${{ inputs.OBJECT_PREFIX }}" >> $GITHUB_ENV
          echo "PROJECT_ID=${{ inputs.PROJECT_ID }}" >> $GITHUB_ENV
          echo "REGION=${{ inputs.REGION }}" >> $GITHUB_ENV
          echo "ENVIRONMENT=${{ inputs.ENVIRONMENT }}" >> $GITHUB_ENV
          echo "DEPLOYER_SERVICE_ACCOUNT=${{ inputs.DEPLOYER_SERVICE_ACCOUNT }}" >> $GITHUB_ENV
          echo "FEED_API_IMAGE_VERSION=${{ inputs.FEED_API_IMAGE_VERSION }}" >> $GITHUB_ENV

      - name: Populate Variables
        run: |
          scripts/replace-variables.sh -in_file infra/backend.conf.rename_me -out_file infra/backend.conf -variables BUCKET_NAME,OBJECT_PREFIX
          scripts/replace-variables.sh -in_file infra/vars.tfvars.rename_me -out_file infra/vars.tfvars -variables PROJECT_ID,REGION,ENVIRONMENT,DEPLOYER_SERVICE_ACCOUNT,FEED_API_IMAGE_VERSION

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v2
        with:
          registry: us-central1-docker.pkg.dev
          username: _json_key_base64
          password: ${{ secrets.GCP_MOBILITY_FEEDS_SA_KEY }}

      - name: Build & Publish Docker Image
        run: |
          scripts/docker-build-push.sh -project_id $PROJECT_ID -repo_name feeds-$ENVIRONMENT -service feed-api -region $REGION -version $FEED_API_IMAGE_VERSION

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.3
          terraform_wrapper: false

      - name: Terraform Init
        run: |
          cd infra
          terraform init -backend-config=backend.conf

      - name: Terraform Plan
        id: plan
        run: |
          cd infra
          terraform plan -var-file=vars.tfvars -out=tfplan.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PLAN_OUTPUT: ${{ steps.plan.outputs.stdout }}

      - name: Terraform Apply
        if: ${{ inputs.TF_APPLY }}
        run: |
          cd infra
          terraform plan -var-file=vars.tfvars -out=tfplan.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PLAN_OUTPUT: ${{ steps.plan.outputs.stdout }}

      - name: Persist TF plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan.txt
          path: tfplan.txt

      - name: Post Plan to Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            cd infra
            echo "Terraform plan output:" > comment.md
            echo "#### Terraform Plan" >> comment.md
            echo "\n\`\`\`hcl" >> comment.md
            cat tfplan.txt >> comment.md
            echo "\`\`\`" >> comment.md            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Post Plan to Pull Request
#        run: |
#          cd infra
#          echo "Terraform plan output:" > comment.md
#          echo "#### Terraform Plan" >> comment.md
#          echo "\n\`\`\`hcl" >> comment.md
#          cat tfplan.txt >> comment.md
#          echo "\`\`\`" >> comment.md
#          gh pr comment ${{ github.event.pull_request.number }} --body-file comment.md


name: Assign `Next Release` Milestone

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'
      - '.github/**'

jobs:
  assign-milestone:
    runs-on: ubuntu-latest
    
    steps:

      - name: Load secrets from 1Password
        id: onepw_secrets
        uses: 1password/load-secrets-action@v2.0.0
        with:
            export-env: true # Export loaded secrets as environment variables
        env:
            OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
            GH_TOKEN: "op://rbiv7rvkkrsdlpcrz3bmv7nmcu/GitHub generic action token for all repos/credential"
     
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Assign milestone to merged issues
        uses: actions/github-script@v7
        with:
          github-token: ${{ env.GH_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            
            // Get the "next release" milestone
            const milestones = await github.rest.issues.listMilestones({
              owner,
              repo,
              state: 'open'
            });
            
            const nextReleaseMilestone = milestones.data.find(
              milestone => milestone.title.toLowerCase() === 'Next Release'
            );
            
            if (!nextReleaseMilestone) {
              console.log('❌ Next Release milestone not found');
              return;
            }
            
            console.log(`Found milestone: ${nextReleaseMilestone.title} (ID: ${nextReleaseMilestone.number})`);
            
            // Get all closed issues
            const issues = await github.rest.issues.listForRepo({
              owner,
              repo,
              state: 'closed',
              per_page: 100
            });
            
            console.log(`Found ${issues.data.length} closed issues`);
            
            // Process each issue
            for (const issue of issues.data) {
              // Skip pull requests (they appear in issues API but have pull_request property)
              if (issue.pull_request) {
                continue;
              }
              
              // Skip if already has the next release milestone
              if (issue.milestone && issue.milestone.number === nextReleaseMilestone.number) {
                console.log(`Issue #${issue.number} already has Next Release milestone`);
                continue;
              }
              
              // Check if issue was closed by a merged PR
              const timelineEvents = await github.rest.issues.listEventsForTimeline({
                owner,
                repo,
                issue_number: issue.number
              });
              
              const wasMergedToMain = timelineEvents.data.some(event => {
                return event.event === 'closed' && 
                       event.commit_id && 
                       event.source && 
                       event.source.issue && 
                       event.source.issue.pull_request &&
                       event.source.issue.pull_request.merged_at;
              });
              
              if (wasMergedToMain) {
                console.log(`Assigning milestone to issue #${issue.number}: ${issue.title}`);
                
                try {
                  await github.rest.issues.update({
                    owner,
                    repo,
                    issue_number: issue.number,
                    milestone: nextReleaseMilestone.number
                  });
                  
                  console.log(`✅ Successfully assigned milestone to issue #${issue.number}`);
                } catch (error) {
                  console.error(`❌ Failed to assign milestone to issue #${issue.number}:`, error.message);
                }
              } else {
                console.log(`Issue #${issue.number} was not merged to main, skipping`);
              }
            }
            
            console.log('Milestone assignment complete!');

name: Build and Test
on:
  push:
    branches: [ '**' ]
    paths-ignore:
      - '**.md'
env:
  python_version: '3.10'
  java_version: '11' # needed by setup-openapi-generator.sh
  maven_version: '3.9.2' # needed by setup-openapi-generator.sh
  local_postgres_host: postgres
  local_postgres_db: postgres_db
  local_postgres_user: postgres_user
  local_postgres_pwd: postgres_password
  local_postgres_port: 5432

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

#      - name: Setup Maven Action
#        uses: s4u/setup-maven-action@v1.8.0
#        with:
#          java-version: ${{ env.java_version }}
#          maven-version: ${{ env.maven_version }}

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python_version }}

      - name: Update .env file
        run: |
          echo "POSTGRES_USER=${{ env.local_postgres_user }}" > config/.env.local
          echo "PGUSER=${{ env.local_postgres_user }}" >> config/.env.local
          echo "POSTGRES_PASSWORD=${{ env.local_postgres_pwd }}" >> config/.env.local
          echo "POSTGRES_DB=${{ env.local_postgres_db }}" >> config/.env.local
          echo "POSTGRES_PORT=${{ env.local_postgres_port }}" >> config/.env.local
          echo "POSTGRES_HOST=localhost" >> config/.env.local
          echo "ENV=dev" >> config/.env.local

      - name: Docker Compose DB/Liquibase for db-gen.sh
        run: docker-compose --env-file ./config/.env.local  -f docker-compose-liquibase.yaml up -d
        working-directory: ${{ github.workspace }}

      - name: Generate DB code
        run: |
          scripts/db-gen.sh

      - name: Generate API code
        run: |
          scripts/setup-openapi-generator.sh
          scripts/api-gen.sh

#      Uncomment the unit tests when tests are ready
#      - name: Run unit tests
#        run: |
#          scripts/api-test.sh
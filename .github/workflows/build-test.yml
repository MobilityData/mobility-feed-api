name: Build and Test
on:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
  workflow_call:

env:
  python_version: '3.10'
  java_version: '11' # needed by setup-openapi-generator.sh

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions: write-all
    name: Build & Test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK ${{ env.java_version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.java_version }}
          distribution: 'temurin'

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python_version }}

      - name: Docker Compose DB/Liquibase for db-gen.sh
        run: docker-compose --env-file ./config/.env.local up -d liquibase
        working-directory: ${{ github.workspace }}

      - name: Generate DB code
        run: |
          scripts/db-gen.sh

      - name: List generated files
        run: |
          ls -lR ./api/src/database_gen/\

      - name: Print PYTHONPATH
        run: echo $PYTHONPATH

      - name: Docker Compose DB/Liquibase for unit tests
        run: docker-compose --env-file ./config/.env.local up -d liquibase-test
        working-directory: ${{ github.workspace }}
            
      - name: Generate API code
        run: |
          scripts/setup-openapi-generator.sh
          scripts/api-gen.sh

      - name: Run lint checks
        shell: bash
        run: |
          scripts/lint-tests.sh

      - name: Unit tests - API
        shell: bash
        run: |
          scripts/api-tests.sh --folder api --html_report

      - name: Unit tests - Python Functions
        shell: bash
        run: |
          scripts/api-tests.sh --folder functions-python --html_report

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage_report
          path: scripts/coverage_reports/

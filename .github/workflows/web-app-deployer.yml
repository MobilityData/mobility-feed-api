name: Web App - Build Deploy
on:
  workflow_call:
    inputs:
      FIREBASE_PROJECT:
        description: Firebase project.
        type: string
        default: dev
        required: true
      PREVIEW_DEPLOYMENT:
        description: True if the firebase will be deployed in preview mode, false otherwise
        type: boolean
        default: false
        required: false
      PREVIEW_HOST_NAME:
        description: Host name to be used in preview deployment
        type: string
        required: false

env:
  NODE_VERSION: "18"

jobs:
  # lint-test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}

  #     - name: Install dependencies
  #       working-directory: web-app
  #       run: yarn install --frozen-lockfile

  #     - name: Cache node modules
  #       id: cache-npm
  #       uses: actions/cache@v4
  #       env:
  #         cache-name: cache-node-modules
  #       with:
  #         path: |
  #           **/node_modules
  #           **/.eslintcache
  #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn-lock.json') }}

  #     - name: Cache Cypress binary
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.cache/Cypress
  #         key: cypress-${{ runner.os }}-binary-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           cypress-${{ runner.os }}-binary-

  #     - name: Lint
  #       working-directory: web-app
  #       run: yarn lint

  #     - name: Unit tests
  #       working-directory: web-app
  #       run: yarn test:ci

  #     - name: Set Firebase project properties
  #       working-directory: web-app
  #       run: |
  #         echo "Setting FIREBASE_PROJECT to 'dev'"
  #         echo "FIREBASE_PROJECT=dev" >> $GITHUB_ENV
  #         echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.DEV_REACT_APP_FIREBASE_API_KEY }}" >> $GITHUB_ENV
  #         echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.DEV_REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
  #         echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.DEV_REACT_APP_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
  #         echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.DEV_REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
  #         echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.DEV_REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
  #         echo "REACT_REACT_APP_FIREBASE_APP_ID=${{ secrets.DEV_REACT_APP_FIREBASE_APP_ID }}" >> $GITHUB_ENV
  #         echo "REACT_APP_RECAPTCHA_SITE_KEY=${{ secrets.DEV_REACT_APP_RECAPTCHA_SITE_KEY }}" >> $GITHUB_ENV
  #         echo "CYPRESS_EMAIL=${{ secrets.DEV_CYPRESS_EMAIL }}" >> $GITHUB_ENV
  #         echo "CYPRESS_PWD=${{ secrets.DEV_CYPRESS_PWD }}" >> $GITHUB_ENV

  #     - name: Populate Variables
  #       working-directory: web-app
  #       run: |
  #         ../scripts/replace-variables.sh -in_file src/.env.rename_me -out_file src/.env.test -variables REACT_APP_FIREBASE_API_KEY,REACT_APP_FIREBASE_AUTH_DOMAIN,REACT_APP_FIREBASE_PROJECT_ID,REACT_APP_FIREBASE_STORAGE_BUCKET,REACT_APP_FIREBASE_MESSAGING_SENDER_ID,REACT_REACT_APP_FIREBASE_APP_ID,REACT_APP_RECAPTCHA_SITE_KEY
  #         ../scripts/replace-variables.sh -in_file cypress.env.json.rename_me -out_file cypress.env.json -variables CYPRESS_EMAIL,CYPRESS_PWD

  #     - name: Cypress test
  #       uses: cypress-io/github-action@v6
  #       with:
  #         start: yarn start:test
  #         wait-on: "npx wait-on --timeout 120000 http://127.0.0.1:3000"
  #         working-directory: web-app

  #     - uses: actions/upload-artifact@v4
  #       if: failure()
  #       with:
  #         name: cypress-screenshots
  #         path: ./web-app/cypress/screenshots

  #     - uses: actions/upload-artifact@v4
  #       if: always()
  #       with:
  #         name: cypress-videos
  #         path: ./web-app/cypress/videos

  deploy-web-app:
    name: "Build & Deploy"
    permissions: write-all
    # needs: [lint-test]
    runs-on: ubuntu-latest
    outputs:
      # Output will be baseb4 encoded due to a false positive secret detection
      # More info https://github.com/orgs/community/discussions/37942
      hosting_url: ${{ steps.deploy-preview.outputs.hosting_url }}  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud DEV
        if: ${{ inputs.FIREBASE_PROJECT == 'dev' }}
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.DEV_GCP_MOBILITY_FEEDS_SA_KEY }}

      - name: Authenticate to Google Cloud QA
        if: ${{ inputs.FIREBASE_PROJECT == 'qa' }}
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.QA_GCP_MOBILITY_FEEDS_SA_KEY }}

      - name: Authenticate to Google Cloud PROD
        if: ${{ inputs.FIREBASE_PROJECT == 'prod' }}
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.PROD_GCP_MOBILITY_FEEDS_SA_KEY }}

      - name: Google Cloud Setup
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        working-directory: web-app
        run: yarn install --frozen-lockfile

      - name: Set Firebase project properties
        working-directory: web-app
        run: |
          if [[ ${{ inputs.FIREBASE_PROJECT }} == 'qa' ]]; then
              echo "Setting FIREBASE_PROJECT to 'pushed to main branch'"
              echo "FIREBASE_PROJECT=qa" >> $GITHUB_ENV
              echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.QA_REACT_APP_FIREBASE_API_KEY }}" >> $GITHUB_ENV
              echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.QA_REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
              echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.QA_REACT_APP_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
              echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.QA_REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
              echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.QA_REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
              echo "REACT_REACT_APP_FIREBASE_APP_ID=${{ secrets.QA_REACT_APP_FIREBASE_APP_ID }}" >> $GITHUB_ENV
              echo "REACT_APP_RECAPTCHA_SITE_KEY=${{ secrets.QA_REACT_APP_RECAPTCHA_SITE_KEY }}" >> $GITHUB_ENV
          elif [[ ${{ inputs.FIREBASE_PROJECT }} == 'prod' ]]; then
            echo "Setting FIREBASE_PROJECT to 'prod'"
            echo "FIREBASE_PROJECT=prod" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.PROD_REACT_APP_FIREBASE_API_KEY }}" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.PROD_REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.PROD_REACT_APP_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.PROD_REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.PROD_REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
            echo "REACT_REACT_APP_FIREBASE_APP_ID=${{ secrets.PROD_REACT_APP_FIREBASE_APP_ID }}" >> $GITHUB_ENV
            echo "REACT_APP_RECAPTCHA_SITE_KEY=${{ secrets.PROD_REACT_APP_RECAPTCHA_SITE_KEY }}" >> $GITHUB_ENV        
          else
            echo "Setting FIREBASE_PROJECT to 'dev'"
            echo "FIREBASE_PROJECT=dev" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.DEV_REACT_APP_FIREBASE_API_KEY }}" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.DEV_REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.DEV_REACT_APP_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.DEV_REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.DEV_REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
            echo "REACT_REACT_APP_FIREBASE_APP_ID=${{ secrets.DEV_REACT_APP_FIREBASE_APP_ID }}" >> $GITHUB_ENV
            echo "REACT_APP_RECAPTCHA_SITE_KEY=${{ secrets.DEV_REACT_APP_RECAPTCHA_SITE_KEY }}" >> $GITHUB_ENV
          fi

      - name: Populate Variables
        working-directory: web-app
        run: |
          ../scripts/replace-variables.sh -in_file src/.env.rename_me -out_file src/.env.${{  inputs.FIREBASE_PROJECT }} -variables REACT_APP_FIREBASE_API_KEY,REACT_APP_FIREBASE_AUTH_DOMAIN,REACT_APP_FIREBASE_PROJECT_ID,REACT_APP_FIREBASE_STORAGE_BUCKET,REACT_APP_FIREBASE_MESSAGING_SENDER_ID,REACT_REACT_APP_FIREBASE_APP_ID,REACT_APP_RECAPTCHA_SITE_KEY

      - name: Run Install for Functions
        working-directory: functions
        run: yarn install

      - name: Select Firebase Project for Functions
        working-directory: functions
        run: npx firebase use ${{  inputs.FIREBASE_PROJECT }}

      - name: Run Lint for Functions
        working-directory: functions
        run: yarn lint

      - name: Run Tests for Functions
        working-directory: functions
        run: yarn test

      - name: Set Firebase Password Policy
        working-directory: functions/packages/firebase-password-policy
        run: |
          yarn build
          node lib/index.js

      - name: Deploy Firebase Functions
        working-directory: functions
        run: npx firebase deploy --only functions

      - name: Build
        working-directory: web-app
        run: yarn build:${FIREBASE_PROJECT}

      - name: Select Firebase Project
        working-directory: web-app
        run: npx firebase use ${{  inputs.FIREBASE_PROJECT }}

      - name: Deploy to Firebase Hosting (${{ inputs.FIREBASE_PROJECT }})
        if: ${{ !inputs.PREVIEW_DEPLOYMENT }}
        working-directory: web-app
        run: npx firebase deploy --only hosting

      - name: Deploy to Firebase Preview Hosting (${{ inputs.FIREBASE_PROJECT }})
        id: deploy-preview
        if: ${{ inputs.PREVIEW_DEPLOYMENT }}
        working-directory: web-app
        run: |
          npx firebase hosting:channel:deploy ${{ inputs.PREVIEW_HOST_NAME }}
          HOSTING_URL=$(npx firebase hosting:channel:list | grep ${{ inputs.PREVIEW_HOST_NAME }} | awk '{print $7}')
          HOSTING_URL_64=$(echo $HOSTING_URL | base64)
          echo "hosting_url=$HOSTING_URL_64" >> "$GITHUB_OUTPUT"


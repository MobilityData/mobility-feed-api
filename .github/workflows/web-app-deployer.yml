name: Web App - Build Deploy
on:
  workflow_call:
    inputs:
      FIREBASE_PROJECT:
        description: Firebase project.
        type: string
        default: dev
        required: true
      PREVIEW_DEPLOYMENT:
        description: True if the firebase will be deployed in preview mode, false otherwise
        type: boolean
        default: false
        required: false
      PREVIEW_HOST_NAME:
        description: Host name to be used in preview deployment
        type: string
        required: false
      REACT_APP_GOOGLE_ANALYTICS_ID:
        description: Google Analytics ID
        type: string
        # defaulting to a placeholder to keep the GA ID empty if parameter is not passed
        default: '{{REACT_APP_GOOGLE_ANALYTICS_ID}}'
        required: false
      FEED_SUBMIT_GOOGLE_SHEET_ID:
        description: The google sheet id for the feed submit form
        type: string
        required: false
      OP_SLACK_WEBHOOK_URL:
        description: 1Password Slack webhook URL secret reference for add feed channel
        type: string
        required: false
      OP_ADD_FEED_FORM_GITHUB_TOKEN:
        description: 1Password GitHub token secret reference
        type: string
        required: false
      ENABLE_QUALITY_CHECKS:
        description: When true the tests and lint checks are performed(default), false will skip. This is only valid in protopype and demo deployments
        type: boolean
        default: true
      PREVIEW_EXPIRES_DAYS:
        description: The number of days the preview deployment will be active.
        type: string
        default: "7"
    outputs:
      hosting_url:
        description: The URL of the deployed web app, when applicable
        value: ${{ jobs.build-deploy.outputs.hosting_url }}
      hosting_expiration_date:
        description: The expiration date of the preview, when applicable
        value: ${{ jobs.build-deploy.outputs.hosting_expiration_date }}
env:
  NODE_VERSION: "18"

jobs:
  lint-test:
    name: Test
    runs-on: ubuntu-latest
    if: ${{ inputs.ENABLE_QUALITY_CHECKS}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          cache-dependency-path: 'web-app/yarn.lock'

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: |
            **/node_modules
            **/.eslintcache
          key: ${{ runner.os }}-yarn-${{ hashFiles('web-app/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        working-directory: web-app
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Cache Cypress binary
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-binary-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-binary-

      - name: Lint
        working-directory: web-app
        run: yarn lint

      - name: Unit tests
        working-directory: web-app
        run: yarn test:ci

      - name: Set Firebase project properties
        working-directory: web-app
        run: |
          echo "Setting FIREBASE_PROJECT to 'dev'"
          echo "FIREBASE_PROJECT=dev" >> $GITHUB_ENV
          echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.DEV_REACT_APP_FIREBASE_API_KEY }}" >> $GITHUB_ENV
          echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.DEV_REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
          echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.DEV_REACT_APP_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
          echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.DEV_REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
          echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.DEV_REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
          echo "REACT_APP_FIREBASE_APP_ID=${{ secrets.DEV_REACT_APP_FIREBASE_APP_ID }}" >> $GITHUB_ENV
          echo "REACT_APP_RECAPTCHA_SITE_KEY=${{ secrets.DEV_REACT_APP_RECAPTCHA_SITE_KEY }}" >> $GITHUB_ENV
          echo "REACT_APP_FEED_API_BASE_URL=${{ secrets.REACT_APP_FEED_API_BASE_URL }}" >> $GITHUB_ENV
          echo "CYPRESS_EMAIL=${{ secrets.DEV_CYPRESS_EMAIL }}" >> $GITHUB_ENV
          echo "CYPRESS_PWD=${{ secrets.DEV_CYPRESS_PWD }}" >> $GITHUB_ENV
          echo "REACT_APP_REMOTE_CONFIG_MINIMUM_FETCH_INTERVAL_MILLI=300000" >> $GITHUB_ENV
          echo "REACT_APP_FEED_API_BASE_URL=https://api-dev.mobilitydatabase.org" >> $GITHUB_ENV

      - name: Populate Variables
        working-directory: web-app
        run: |
          ../scripts/replace-variables.sh -in_file src/.env.rename_me -out_file src/.env.test -variables REACT_APP_FIREBASE_API_KEY,REACT_APP_FIREBASE_AUTH_DOMAIN,REACT_APP_FIREBASE_PROJECT_ID,REACT_APP_FIREBASE_STORAGE_BUCKET,REACT_APP_FIREBASE_MESSAGING_SENDER_ID,REACT_APP_FIREBASE_APP_ID,REACT_APP_RECAPTCHA_SITE_KEY,REACT_APP_REMOTE_CONFIG_MINIMUM_FETCH_INTERVAL_MILLI
          ../scripts/replace-variables.sh -in_file cypress.env.json.rename_me -out_file cypress.env.json -variables CYPRESS_EMAIL,CYPRESS_PWD

      - name: Cypress test
        uses: cypress-io/github-action@v6
        with:
          start: |
            yarn start:test
            npx firebase emulators:start --only auth --project mobility-feeds-dev
          wait-on: npx wait-on --timeout 120000 http://127.0.0.1:3000 http://127.0.0.1:9099
          working-directory: web-app

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: ./web-app/cypress/screenshots

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: ./web-app/cypress/videos

  build-deploy:
    name: "Build & Deploy"
    permissions: write-all
    needs: [lint-test]
    if: success() || needs.lint-test.result == 'skipped'
    runs-on: ubuntu-latest
    outputs:
      # Output will be baseb4 encoded due to a false positive secret detection
      # More info https://github.com/orgs/community/discussions/37942
      hosting_url: ${{ steps.deploy-preview.outputs.hosting_url }}
      hosting_expiration_date: ${{ steps.deploy-preview.outputs.hosting_expiration_date }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: 1Password - Load Secrets
        uses: 1Password/load-secrets-action@v2.0.0
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          SLACK_WEBHOOK_URL: ${{inputs.OP_SLACK_WEBHOOK_URL}}
          ADD_FEED_FORM_GITHUB_TOKEN: ${{inputs.OP_ADD_FEED_FORM_GITHUB_TOKEN}}

      - name: Authenticate to Google Cloud DEV
        if: ${{ inputs.FIREBASE_PROJECT == 'dev' }}
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.DEV_GCP_MOBILITY_FEEDS_SA_KEY }}

      - name: Authenticate to Google Cloud QA
        if: ${{ inputs.FIREBASE_PROJECT == 'qa' }}
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.QA_GCP_MOBILITY_FEEDS_SA_KEY }}

      - name: Authenticate to Google Cloud PROD
        if: ${{ inputs.FIREBASE_PROJECT == 'prod' }}
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.PROD_GCP_MOBILITY_FEEDS_SA_KEY }}

      - name: Google Cloud Setup
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          cache-dependency-path: 'web-app/yarn.lock'

      - name: Install dependencies
        working-directory: web-app
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Set Firebase project properties
        working-directory: web-app
        run: |
          echo "REACT_APP_GOOGLE_ANALYTICS_ID=${{ inputs.REACT_APP_GOOGLE_ANALYTICS_ID }}" >> $GITHUB_ENV
          if [[ ${{ inputs.FIREBASE_PROJECT }} == 'qa' ]]; then
              echo "Setting FIREBASE_PROJECT to 'pushed to main branch'"
              echo "FIREBASE_PROJECT=qa" >> $GITHUB_ENV
              echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.QA_REACT_APP_FIREBASE_API_KEY }}" >> $GITHUB_ENV
              echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.QA_REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
              echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.QA_REACT_APP_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
              echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.QA_REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
              echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.QA_REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
              echo "REACT_APP_FIREBASE_APP_ID=${{ secrets.QA_REACT_APP_FIREBASE_APP_ID }}" >> $GITHUB_ENV
              echo "REACT_APP_RECAPTCHA_SITE_KEY=${{ secrets.QA_REACT_APP_RECAPTCHA_SITE_KEY }}" >> $GITHUB_ENV
              echo "REACT_APP_REMOTE_CONFIG_MINIMUM_FETCH_INTERVAL_MILLI=300000" >> $GITHUB_ENV
              echo "REACT_APP_FEED_API_BASE_URL=https://api-qa.mobilitydatabase.org" >> $GITHUB_ENV
          elif [[ ${{ inputs.FIREBASE_PROJECT }} == 'prod' ]]; then
            echo "Setting FIREBASE_PROJECT to 'prod'"
            echo "FIREBASE_PROJECT=prod" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.PROD_REACT_APP_FIREBASE_API_KEY }}" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.PROD_REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.PROD_REACT_APP_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.PROD_REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.PROD_REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_APP_ID=${{ secrets.PROD_REACT_APP_FIREBASE_APP_ID }}" >> $GITHUB_ENV
            echo "REACT_APP_RECAPTCHA_SITE_KEY=${{ secrets.PROD_REACT_APP_RECAPTCHA_SITE_KEY }}" >> $GITHUB_ENV
            echo "REACT_APP_REMOTE_CONFIG_MINIMUM_FETCH_INTERVAL_MILLI=3600000" >> $GITHUB_ENV
            echo "REACT_APP_FEED_API_BASE_URL=https://api.mobilitydatabase.org" >> $GITHUB_ENV
          else
            echo "Setting FIREBASE_PROJECT to 'dev'"
            echo "FIREBASE_PROJECT=dev" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.DEV_REACT_APP_FIREBASE_API_KEY }}" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.DEV_REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.DEV_REACT_APP_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.DEV_REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.DEV_REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
            echo "REACT_APP_FIREBASE_APP_ID=${{ secrets.DEV_REACT_APP_FIREBASE_APP_ID }}" >> $GITHUB_ENV
            echo "REACT_APP_RECAPTCHA_SITE_KEY=${{ secrets.DEV_REACT_APP_RECAPTCHA_SITE_KEY }}" >> $GITHUB_ENV
            echo "REACT_APP_REMOTE_CONFIG_MINIMUM_FETCH_INTERVAL_MILLI=300000" >> $GITHUB_ENV
            echo "REACT_APP_FEED_API_BASE_URL=https://api-dev.mobilitydatabase.org" >> $GITHUB_ENV
          fi

      - name: Populate Variables
        working-directory: web-app
        run: |
          ../scripts/replace-variables.sh -in_file src/.env.rename_me -out_file src/.env.${{  inputs.FIREBASE_PROJECT }} -variables REACT_APP_FIREBASE_API_KEY,REACT_APP_FIREBASE_AUTH_DOMAIN,REACT_APP_FIREBASE_PROJECT_ID,REACT_APP_FIREBASE_STORAGE_BUCKET,REACT_APP_FIREBASE_MESSAGING_SENDER_ID,REACT_APP_FIREBASE_APP_ID,REACT_APP_RECAPTCHA_SITE_KEY,REACT_APP_GOOGLE_ANALYTICS_ID,REACT_APP_REMOTE_CONFIG_MINIMUM_FETCH_INTERVAL_MILLI,REACT_APP_FEED_API_BASE_URL

      - name: Run Install for Functions
        if: ${{ !inputs.PREVIEW_DEPLOYMENT }}
        working-directory: functions
        run: yarn install

      - name: Select Firebase Project for Functions
        if: ${{ !inputs.PREVIEW_DEPLOYMENT }}      
        working-directory: functions
        run: npx firebase use ${{  inputs.FIREBASE_PROJECT }}

      - name: Run Lint for Functions
        if: ${{ !inputs.PREVIEW_DEPLOYMENT }}
        working-directory: functions
        run: yarn lint

      - name: Run Tests for Functions
        if: ${{ !inputs.PREVIEW_DEPLOYMENT }}
        working-directory: functions
        run: yarn test

      - name: Set Firebase Password Policy
        if: ${{ !inputs.PREVIEW_DEPLOYMENT }}      
        working-directory: functions/packages/firebase-password-policy
        run: |
          yarn build
          node lib/index.js

      - name: Set Firebase Feed Form Environment
        if: ${{ !inputs.PREVIEW_DEPLOYMENT }}      
        working-directory: functions/packages/feed-form
        run: |
          echo "FEED_SUBMIT_GOOGLE_SHEET_ID=${{  inputs.FEED_SUBMIT_GOOGLE_SHEET_ID }}" > .env
          echo "SLACK_WEBHOOK_URL=${{ env.SLACK_WEBHOOK_URL }}" >> .env
          echo "GITHUB_TOKEN=${{ env.ADD_FEED_FORM_GITHUB_TOKEN }}" >> .env

      - name: Deploy Firebase Functions
        if: ${{ !inputs.PREVIEW_DEPLOYMENT }}
        working-directory: functions
        run: npx firebase deploy --only functions

      - name: Set blocking robots.txt
        if: ${{ inputs.PREVIEW_DEPLOYMENT || inputs.FIREBASE_PROJECT != 'prod' }}
        working-directory: web-app
        run: |
          mv public/robots.staging.txt public/robots.txt

      - name: Build
        working-directory: web-app
        run: yarn build:${FIREBASE_PROJECT}

      - name: Select Firebase Project
        working-directory: web-app
        run: npx firebase use ${{  inputs.FIREBASE_PROJECT }}

      - name: Deploy to Firebase Hosting (${{ inputs.FIREBASE_PROJECT }})
        if: ${{ !inputs.PREVIEW_DEPLOYMENT }}
        working-directory: web-app
        run: npx firebase deploy --only hosting

      - name: Deploy to Firebase Preview Hosting (${{ inputs.FIREBASE_PROJECT }})
        id: deploy-preview
        if: ${{ inputs.PREVIEW_DEPLOYMENT }}
        working-directory: web-app
        run: |
          HOSTING_URL=$(npx firebase hosting:channel:list | grep ${{ inputs.PREVIEW_HOST_NAME }} | awk '{print $7}')
          HOSTING_URL=$(echo "$HOSTING_URL" | sed 's/mobility-feeds-prod/__firebase_project__/g')
          echo "hosting_url: $HOSTING_URL"
          HOSTING_EXPIRATION_DATE=$(npx firebase hosting:channel:list | grep ${{ inputs.PREVIEW_HOST_NAME }} | awk '{printf "%s %s\n",$9,$10;}')
          echo "hosting_url=$HOSTING_URL_64" >> "$GITHUB_OUTPUT"
          echo "hosting_expiration_date=$HOSTING_EXPIRATION_DATE" >> "$GITHUB_OUTPUT"


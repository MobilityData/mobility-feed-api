# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from feeds_gen.models.data_type import DataType
from feeds_gen.models.feed_location import FeedLocation
from feeds_gen.models.feed_status import FeedStatus
from feeds_gen.models.feed_urls import FeedUrls


class GtfsFeed(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    GtfsFeed - a model defined in OpenAPI

        id: The id of this GtfsFeed [Optional].
        data_type: The data_type of this GtfsFeed [Optional].
        status: The status of this GtfsFeed [Optional].
        provider: The provider of this GtfsFeed [Optional].
        feed_name: The feed_name of this GtfsFeed [Optional].
        note: The note of this GtfsFeed [Optional].
        location: The location of this GtfsFeed [Optional].
        urls: The urls of this GtfsFeed [Optional].
    """

    id: Optional[str] = Field(alias="id", default=None)
    data_type: Optional[DataType] = Field(alias="data_type", default=None)
    status: Optional[FeedStatus] = Field(alias="status", default=None)
    provider: Optional[str] = Field(alias="provider", default=None)
    feed_name: Optional[str] = Field(alias="feed_name", default=None)
    note: Optional[str] = Field(alias="note", default=None)
    location: Optional[FeedLocation] = Field(alias="location", default=None)
    urls: Optional[FeedUrls] = Field(alias="urls", default=None)

GtfsFeed.update_forward_refs()

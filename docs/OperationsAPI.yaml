openapi: 3.0.0
info:
  version: 1.0.0
  title: Mobility Database Catalog Operations
  description: |
    API for the Mobility Database Catalog Operations. See [https://mobilitydatabase.org/](https://mobilitydatabase.org/). 
    This API was designed for internal use and is not intended to be used by the general public.
    The Mobility Database Operation API uses Auth2.0 authentication.
  termsOfService: https://mobilitydatabase.org/terms-and-conditions
  contact:
    name: MobilityData
    url: https://mobilitydata.org/
    email: api@mobilitydata.org
  license:
    name: MobilityData License
    url: https://www.apache.org/licenses/LICENSE-2.0

tags:
  - name: "operations"
    description: "Mobility Database Operations"

paths:
  /v1/operations/feeds/gtfs:
    put:
      description: Update the specified GTFS feed in the Mobility Database.
      tags:
        - "operations"
      operationId: updateGtfsFeed
      security:
        - ApiKeyAuth: []
      requestBody:
        description: Payload to update the specified GTFS feed.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRequestGtfsFeed"
      responses:
        200:
          description: >
            The feed was successfully updated. No content is returned.
        204:
          description: >
            The feed update request was successfully received, but the update process was skipped as the request matches with the source feed.
        400:
          description: >
            The request was invalid.
        401:
          description: >
            The request was not authenticated or has invalid authentication credentials.
        500:
          description: >
            An internal server error occurred.

components:
  schemas:
    Redirect:
      type: object
      properties:
        target_id:
          description: The feed ID that should be used in replacement of the current one.
          type: string
          example: mdb-10
        comment:
          description: A comment explaining the redirect.
          type: string
          example: Redirected because of a change of URL.
    BasicFeed:
      type: object
      discriminator:
        propertyName: data_type
        mapping:
          gtfs: '#/components/schemas/GtfsFeed'
          gtfs_rt: '#/components/schemas/GtfsRTFeed'
      properties:
        id:
          description: Unique identifier used as a key for the feeds table.
          type: string
          example: mdb-1210
        data_type:
          $ref: "#/components/schemas/DataType"
        status:
         $ref: "#/components/schemas/FeedStatus"
        created_at:
          description: The date and time the feed was added to the database, in ISO 8601 date-time format.
          type: string
          example: 2023-07-10T22:06:00Z
          format: date-time
        external_ids:
          $ref: "#/components/schemas/ExternalIds"
        provider:
          description: A commonly used name for the transit provider included in the feed.
          type: string
          example: Los Angeles Department of Transportation (LADOT, DASH, Commuter Express)
        feed_name:
          description: >
            An optional description of the data feed, e.g to specify if the data feed is an aggregate of 
            multiple providers, or which network is represented by the feed.
          type: string
          example: Bus
        note:
         description: A note to clarify complex use cases for consumers.
         type: string
        feed_contact_email:
          description: Use to contact the feed producer.
          type: string
          format: email
          example: someEmail@ladotbus.com
        source_info:
          $ref: "#/components/schemas/SourceInfo"
        redirects:
          type: array
          items:
            $ref: "#/components/schemas/Redirect"
      required:
        - id
        - data_type
        - status

    GtfsFeed:
      allOf:
        - $ref: "#/components/schemas/BasicFeed"
        - type: object
        # TODO add this properties when implementing the get endpoint
          # properties:
          #   locations:
          #     $ref: "#/components/schemas/Locations"
          #   latest_dataset:
          #     $ref: "#/components/schemas/LatestDataset"

    UpdateRequestGtfsRtFeed:
      allOf:
        - $ref: "#/components/schemas/BasicFeed"
        - type: object
          properties:
            entity_types:
              type: array
              items:
                $ref: "#/components/schemas/EntityType"
            feed_references:
              description:
                A list of the GTFS feeds that the real time source is associated with, represented by their MDB source IDs.
              type: array
              items:
                type: string
                example: "mdb-20"

    UpdateRequestGtfsFeed:
      type: object
      properties:
        id:
          description: Unique identifier used as a key for the feeds table.
          type: string
          example: mdb-1210
        status:
          $ref: "#/components/schemas/FeedStatus"
        external_ids:
          $ref: "#/components/schemas/ExternalIds"
        provider:
          description: A commonly used name for the transit provider included in the feed.
          type: string
          example: Los Angeles Department of Transportation (LADOT, DASH, Commuter Express)
        feed_name:
          description: >
            An optional description of the data feed, e.g to specify if the data feed is an aggregate of 
            multiple providers, or which network is represented by the feed.
          type: string
          example: Bus
        note:
         description: A note to clarify complex use cases for consumers.
         type: string
        feed_contact_email:
          description: Use to contact the feed producer.
          type: string
          example: someEmail@ladotbus.com
        source_info:
          $ref: "#/components/schemas/SourceInfo"
        redirects:
          type: array
          items:
            $ref: "#/components/schemas/Redirect"
      required:
        - id
        - status

    ExternalIds:
      type: array
      items:
        $ref: "#/components/schemas/ExternalId"

    ExternalId:
      type: object
      properties:
        external_id:
          description: The ID that can be use to find the feed data in an external or legacy database.
          type: string
          example: 1210
        source:
          description: The source of the external ID, e.g. the name of the database where the external ID can be used.
          type: string
          example: mdb

    SourceInfo:
      type: object
      properties:
        producer_url:
          description: >
            URL where the producer is providing the dataset. 
            Refer to the authentication information to know how to access this URL.
          type: string
          format: url
          example: https://ladotbus.com/gtfs
        authentication_type:
          $ref: "#/components/schemas/Authentication_type"
        authentication_info_url:
          description: >
            Contains a URL to a human-readable page describing how the authentication should be performed and how credentials can be created. 
            This field is required for `authentication_type=1` and `authentication_type=2`.
          type: string
          format: url
          example: https://apidevelopers.ladottransit.com
        api_key_parameter_name:
          type: string
          description: >
            Defines the name of the parameter to pass in the URL to provide the API key.
            This field is required for `authentication_type=1` and `authentication_type=2`.
          example: Ocp-Apim-Subscription-Key
        license_url:
          description: A URL where to find the license for the feed.
          type: string
          format: url
          example: https://www.ladottransit.com/dla.html

    EntityType:
      type: string
      enum:
        - vp
        - tu
        - sa
      example: vp
      description: >
        The type of realtime entry:
          * vp - vehicle positions
          * tu - trip updates
          * sa - service alerts

    FeedStatus:
      description: >
        Describes status of the Feed. Should be one of
          * `active` Feed should be used in public trip planners.
          * `deprecated` Feed is explicitly deprecated and should not be used in public trip planners.
          * `inactive` Feed hasn't been recently updated and should be used at risk of providing outdated information.
          * `development` Feed is being used for development purposes and should not be used in public trip planners.
      type: string
      enum:
        - active
        - deprecated
        - inactive
        - development
      example: active

    DataType:
      description: >
        Describes data type of a fee. Should be one of
          * `gtfs` GTFS feed.
          * `gtfs_rt` GTFS-RT feed.
          * `gbfs` GBFS feed.
      type: string
      enum:
        - gtfs
        - gtfs_rt
        - gbfs
      example: gtfs

    Authentication_type:
      description: >
        Defines the type of authentication required to access the `producer_url`. Valid values for this field are:
          * 0 or (empty) - No authentication required.
          * 1 - The authentication requires an API key, which should be passed as value of the parameter api_key_parameter_name in the URL. Please visit URL in authentication_info_url for more information.
          * 2 - The authentication requires an HTTP header, which should be passed as the value of the header api_key_parameter_name in the HTTP request.
        When not provided, the authentication type is assumed to be 0.
      type: string
      enum:
        - 0
        - 1
        - 2
      example: 2

  parameters:
    feed_id_path_param:
      name: id
      in: path
      description: The feed ID of the requested feed.
      required: True
      schema:
        type: string
        example: mdb-1210

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-API-KEY
      in: header

security:
  - ApiKeyAuth: []

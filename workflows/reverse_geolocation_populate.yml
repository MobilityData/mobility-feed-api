main:
  steps:
    - initialize:
        assign:
          - countryCodes
          - successList: ""
          - failureList: ""
    - process_batch:
        parallel:
          concurrency_limit: ${int(sys.get_env("batch_size"))}
          shared: [successList, failureList]
          for:
            value: countryCode
            in: ${countryCodes}
            steps:
              - make_request:
                  try:
                    call: http.post
                    args:
                      url: ${sys.get_env("reverse_geolocation_populate_url")}
                      timeout: 1800 # Max allowed
                      auth:
                          type: OIDC
                      body:
                        country_code: ${countryCode}
                    result: response
                  except:
                    as: e
                    steps:
                      - log_http_error:
                          call: sys.log
                          args:
                            text: '${"HTTP error for country code " + countryCode + ": " + e.message}'
                            severity: ERROR
                      - increment_failure:
                          assign:
                          - failureList: ${failureList + " " + countryCode}
              - check_response:
                  switch:
                  - condition: ${response != null and response.code == 200}
                    steps:
                      - increment_success:
                          assign:
                            - successList: ${successList + " " + countryCode}
                      - log_response:
                            call: sys.log
                            args:
                                text: '${"Country code " + countryCode + " got response " + string(response.code)}'
    - finalize:
        return:
          successList: ${successList}
          failureList: ${failureList}
